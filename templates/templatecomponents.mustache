{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template mod_nosferatu/templatecomponents

    TODO describe template templatecomponents

    Example context (json):
    {
        "baseurl": "https://localhost/mod/nosferatu/view.php?id=1"
    }
}}
<p>Hi!</p>

<p>This first tutorial will guide you through creating a reactive application within Moodle.
In this case, you will learn the following concepts:</p>

<ul>
    <li>Introduction to reactivity.</li>
    <li>Introduction to Virtual DOM rendering.</li>
    <li>How to set the initial state data.</li>
    <li>Instantiating a reactive APP.</li>
    <li>Create a reactive template component to display the state data.</li>
    <li>Modify the state data using the reactive debug tools.</li>
    <li>Create mutations to alter the state data from the components.</li>
    <li>Load components content only when the state is ready.</li>
    <li>Forms in components.</li>
    <li>Custom state watchers.</li>
    <li>Optimize static content.</li>
</ul>

<p>I know it sounds like a lot of new concepts. However, using reactivity and template
components will save you tons of Javascript code, make your code more readable, and,
most importantly, make it more maintainable.</p>

<p>Don't worry; Rome wasn't built in a day. I will show you all the basics step by step
so you can learn at your own pace. If you are impatient or already know some of the basics,
you can go directly to the final result and look up the code comments.</p>

<ul>
    <li><a href="{{baseurl}}&section=templatecomponents/intro01">Introduction to reactivity</a></li>
    <li><a href="{{baseurl}}&section=templatecomponents/intro02">Introduction to Virtual DOM</a></li>
    <li>How to use this tutorial</li>
    <li>Step 01: state data and the reactive instance</li>
    <li>Step 02: our first template component</li>
    <li>Step 03: mutations</li>
    <li>Component life cycle hooks</li>
    <li>Step 04: user interactions (vampire component)</li>
    <li>Step 05: subcomponents and template injection</li>
    <li>Step 06: component optimization</li>
    <li><a href="{{baseurl}}&section=simplified">Final result</a></li>
</ul>
