define("mod_nosferatu/nosferatu",["exports","core/reactive","mod_nosferatu/mutations","mod_nosferatu/events","core/log","core/ajax","core/config"],(function(_exports,_reactive,_mutations,_events,_log,_ajax,_config){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.nosferatu=_exports.init=void 0,_log=_interopRequireDefault(_log),_ajax=_interopRequireDefault(_ajax),_config=_interopRequireDefault(_config);const loadState=async(activityid,reactive)=>{let stateData;try{stateData=await(async activityid=>await _ajax.default.call([{methodname:"mod_nosferatu_get_state",args:{activityid:activityid}}])[0])(activityid)}catch(error){return _log.default.error("EXCEPTION RAISED WHILE INIT STATE"),void _log.default.error(error)}reactive.setInitialState(stateData)};
/**
   * Main modfule module reactive class.
   *
   *
   * @module     core_courseformat/mod/nosferatu/nosferatu
   * @class     core_courseformat/mod/nosferatu/nosferatu
   * @copyright  2021 Ferran Recio <ferran@moodle.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
class Nosferatu extends _reactive.Reactive{}const nosferatu=new Nosferatu({name:"mod_nosferatu",eventName:_events.eventTypes.modNosferatuStateUpdated,eventDispatch:_events.notifyModNosferatuStateUpdated,mutations:_mutations.mutations});_exports.nosferatu=nosferatu;_exports.init=cmid=>{loadState(cmid,nosferatu)},_config.default.nosferatu=nosferatu}));

//# sourceMappingURL=nosferatu.min.js.map