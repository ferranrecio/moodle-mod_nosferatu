{"version":3,"file":"nosferatu.min.js","sources":["../../../src/local/beginner/nosferatu.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {Reactive} from 'core/reactive';\nimport {mutations} from 'mod_nosferatu/local/beginner/mutations';\nimport {eventTypes, notifyModNosferatuStateUpdated} from 'mod_nosferatu/events';\n\n\n// This is out initial state. For more complex aplications this state will be loaded\n// using a webservice.\nconst state = {\n    'people': [\n        {\n            id: 1,\n            name: 'Carlos',\n            bitten: false,\n        },\n        {\n            id: 2,\n            name: 'Amaia',\n            bitten: false,\n        },\n        {\n            id: 3,\n            name: 'Sara',\n            bitten: false,\n        },\n        {\n            id: 4,\n            name: 'Ilya',\n            bitten: true,\n        },\n        {\n            id: 5,\n            name: 'Ferran',\n            bitten: false,\n        },\n    ],\n};\n\n// It is recommended to use your own reactive class extending the base one.\n// By having your own class you will be able to add global methods to you application\n// because all components will inherit the main reactive instance.\nclass Nosferatu extends Reactive {\n}\n\n// The reactive instance requires an event (eventNamer and eventDispatch method)\nexport const nosferatu = new Nosferatu({\n    name: 'mod_nosferatu_beginner',\n    eventName: eventTypes.modNosferatuStateUpdated,\n    eventDispatch: notifyModNosferatuStateUpdated,\n    state,\n    mutations,\n});\n\n/**\n * Load the initial state.\n *\n * For now the state only exists in the frontend but in more complex scenarios\n * the state data will be generated using a webservice.\n */\nexport const init = () => {\n    // In this example we don't need to set anything because it is only a frontend\n    // aplication. In future examples the initial state will be loaded asynchronous\n    // and the init method will to all the initializing work.\n};\n"],"names":["Nosferatu","Reactive","nosferatu","name","eventName","eventTypes","modNosferatuStateUpdated","eventDispatch","notifyModNosferatuStateUpdated","state","id","bitten","mutations"],"mappings":"mSAuDMA,kBAAkBC,0BAIXC,UAAY,IAAIF,UAAU,CACnCG,KAAM,yBACNC,UAAWC,mBAAWC,yBACtBC,cAAeC,uCACfC,MAzCU,QACA,CACN,CACIC,GAAI,EACJP,KAAM,SACNQ,QAAQ,GAEZ,CACID,GAAI,EACJP,KAAM,QACNQ,QAAQ,GAEZ,CACID,GAAI,EACJP,KAAM,OACNQ,QAAQ,GAEZ,CACID,GAAI,EACJP,KAAM,OACNQ,QAAQ,GAEZ,CACID,GAAI,EACJP,KAAM,SACNQ,QAAQ,KAiBhBC,UAAAA,kEASgB"}