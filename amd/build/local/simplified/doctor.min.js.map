{"version":3,"file":"doctor.min.js","sources":["../../../src/local/simplified/doctor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Example of a non-injectable template component.\n *\n * @module     mod_nosferatu/local/simplified/doctor\n * @copyright  2024 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {TemplateComponent} from 'core/reactive';\n\nexport default class extends TemplateComponent {\n\n    /**\n     * All the component definition should be initialized on the \"create\" method.\n     */\n    create() {\n        // This is an optional name for the debugging messages.\n        this.name = 'nosferatu-app-doctor';\n    }\n\n    /**\n     * Get the template name.\n     *\n     * In this case, we are using a non-injectable component. This means the parent content\n     * will not inject the template and the component itself is responsible for rendering.\n     * This can happen when the component has especial template data the parent is not aware of.\n     *\n     * @returns {string}\n     */\n    getTemplateName() {\n        return 'mod_nosferatu/local/simplified/doctor';\n    }\n\n    /**\n     * Get the data to be used in the template.\n     *\n     * In this case, the component calculates a different data attributes that the one\n     * the parent component can provide so it needs to be calculated using the state.\n     *\n     * @returns {Object}\n     */\n    getTemplateData() {\n        return {\n            // We will use the showdoctor property to show the doctor only when it is refreshed,\n            // not when the template is included via another template.\n            // In a real case, we could use this to show a loading spinner\n            // while the doctor is loaded.\n            showdoctor: true,\n            hasbitten: this.reactive.isSomeoneBitten(),\n        };\n    }\n\n    stateReady() {\n        // We want to load the doctor asynchronously, so we will refresh the template now.\n        this.refreshTemplate();\n\n        // Even w3ith the refresh in progress, the main element is also ready to be used\n        // and add the event listener. It is important to delegate as much evenets to the\n        // main element as possible to simplify the logic.\n        this.addEventListener(this.element, 'click', this.processClick);\n    }\n\n    // Note that we don't have any allowTemplateInjection method. This is because we\n    // do not allow our parent component to inject the content because it does not\n    // have the knowledge to calculate our template data.\n\n    /**\n     * Process the click event.\n     *\n     * It is important to delegate as much events as possible to the main element\n     * because any inner element can be replaced when the template is reloaded.\n     *\n     * @param {Event} event\n     */\n    processClick(event) {\n        const clickedElement = event.target.closest('[data-mdl-nosferatu-action]');\n        if (!clickedElement) {\n            return;\n        }\n        if (clickedElement.getAttribute('data-mdl-nosferatu-action') === 'cureAll') {\n            event.preventDefault();\n            // Any state change must be done dispatching mutations.\n            this.reactive.dispatch('cureAll');\n        }\n    }\n}\n"],"names":["TemplateComponent","create","name","getTemplateName","getTemplateData","showdoctor","hasbitten","this","reactive","isSomeoneBitten","stateReady","refreshTemplate","addEventListener","element","processClick","event","clickedElement","target","closest","getAttribute","preventDefault","dispatch"],"mappings":";;;;;;;;uBAwB6BA,4BAKzBC,cAESC,KAAO,uBAYhBC,wBACW,wCAWXC,wBACW,CAKHC,YAAY,EACZC,UAAWC,KAAKC,SAASC,mBAIjCC,kBAESC,uBAKAC,iBAAiBL,KAAKM,QAAS,QAASN,KAAKO,cAetDA,aAAaC,aACHC,eAAiBD,MAAME,OAAOC,QAAQ,+BACvCF,gBAG4D,YAA7DA,eAAeG,aAAa,+BAC5BJ,MAAMK,sBAEDZ,SAASa,SAAS"}