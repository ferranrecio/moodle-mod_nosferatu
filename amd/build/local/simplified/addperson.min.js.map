{"version":3,"file":"addperson.min.js","sources":["../../../src/local/simplified/addperson.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {TemplateComponent} from 'core/reactive';\n\n/**\n * Add person component.\n *\n * This is an example of an static component. It does not allow injection\n * and only watches for the person limit to disable the form.\n *\n * @module     mod_nosferatu/local/simplified/addperson\n * @copyright  2024 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport default class extends TemplateComponent {\n\n    /**\n     * All the component definition should be initialized on the \"create\" method.\n     */\n    create() {\n        this.name = 'nosferatu-app-addperson';\n    }\n\n    /**\n     * Get the watchers for the component.\n     *\n     * In this case, we only need to control the limit of people.\n     *\n     * @returns {array} array of watchers.\n     */\n    getWatchers() {\n        // By default, all TemplateComponents will watch for any state changes.\n        // However, the add person form only needs to watch for the people limit.\n        // By explicitly defining the watchers, we can reduce the number of updates.\n        return [\n            {watch: `people:created`, handler: this.refreshTemplate},\n            {watch: `people:deleted`, handler: this.refreshTemplate},\n        ];\n    }\n\n    getTemplateName() {\n        return 'mod_nosferatu/local/simplified/addperson';\n    }\n\n    getTemplateData() {\n        return {\n            limitreached: this.reactive.getAll('people').size > 10,\n        };\n    }\n\n    stateReady() {\n        // You don't need to over-engineer components. In this case, we know\n        // the comonent has only one form, so we simply delegate the submit\n        // event.\n        this.addEventListener(this.element, 'submit', (event) => {\n            event.preventDefault();\n            this.addPerson();\n            return false;\n        });\n        this.addEventListener(this.element, 'keyup', () => {\n            this.handleInputChange();\n        });\n\n        // We want to update the button disabled state when the component is ready.\n        // As you may notice, we are not using the \"handleInputChange\" method directly\n        // in both addEvenetListener and here. This is because the reactive library\n        // will auto-bind the \"this\" value when we use the addEvenetListener.\n        this.handleInputChange();\n    }\n\n    addPerson() {\n        if (this.isInputEmpty()) {\n            return;\n        }\n        // We add an data-mdl-ref to the input field to be able to reference it.\n        const nameField = this.getReference('name');\n        this.reactive.dispatch('putPerson', {\n            name: nameField.value,\n        });\n        // The form itself is static, so we need to clear the input field manually.\n        nameField.value = '';\n        this.handleInputChange();\n    }\n\n    handleInputChange() {\n        this.getReference('button').disabled = this.isInputEmpty();\n    }\n\n    /**\n     * Check if the input is empty.\n     *\n     * We can create as many helper methods as we need to make our compoment more\n     * readable. In this case, we want to check if the input field is empty.\n     *\n     * @returns {boolean}\n     */\n    isInputEmpty() {\n        return this.getReference('name').value.trim() === '';\n    }\n}\n"],"names":["TemplateComponent","create","name","getWatchers","watch","handler","this","refreshTemplate","getTemplateName","getTemplateData","limitreached","reactive","getAll","size","stateReady","addEventListener","element","event","preventDefault","addPerson","handleInputChange","isInputEmpty","nameField","getReference","dispatch","value","disabled","trim"],"mappings":";;;;;;;;;;;uBA2B6BA,4BAKzBC,cACSC,KAAO,0BAUhBC,oBAIW,CACH,CAACC,uBAAyBC,QAASC,KAAKC,iBACxC,CAACH,uBAAyBC,QAASC,KAAKC,kBAIhDC,wBACW,2CAGXC,wBACW,CACHC,aAAcJ,KAAKK,SAASC,OAAO,UAAUC,KAAO,IAI5DC,kBAISC,iBAAiBT,KAAKU,QAAS,UAAWC,QAC3CA,MAAMC,sBACDC,aACE,UAENJ,iBAAiBT,KAAKU,QAAS,SAAS,UACpCI,4BAOJA,oBAGTD,eACQb,KAAKe,4BAIHC,UAAYhB,KAAKiB,aAAa,aAC/BZ,SAASa,SAAS,YAAa,CAChCtB,KAAMoB,UAAUG,QAGpBH,UAAUG,MAAQ,QACbL,oBAGTA,yBACSG,aAAa,UAAUG,SAAWpB,KAAKe,eAWhDA,qBACsD,KAA3Cf,KAAKiB,aAAa,QAAQE,MAAME"}