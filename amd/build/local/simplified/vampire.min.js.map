{"version":3,"file":"vampire.min.js","sources":["../../../src/local/simplified/vampire.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * The Nosferatu vampire component.\n *\n * @module     mod_nosferatu/local/simplified/vampire\n * @copyright  2024 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {TemplateComponent} from 'core/reactive';\n\nexport default class extends TemplateComponent {\n\n    /**\n     * All the component definition should be initialized on the \"create\" method.\n     */\n    create() {\n        // This is an optional name for the debugging messages.\n        this.name = 'nosferatu-app-vampire';\n    }\n\n    /**\n     * Allow template injection.\n     *\n     * This module depend always on the parent component so no need\n     * for having a getTemplateName and getTemplateData methods.\n     */\n    allowTemplateInjection() {\n        return true;\n    }\n\n    /**\n     * This method is called when the state is ready.\n     *\n     * By all means, the stateReady is the equivalent of the dom ready state\n     * but for components. It is used to add event listeners and other\n     * component specific logic.\n     */\n    stateReady() {\n        this.addEventListener(this.element, 'click', this.processClick);\n    }\n\n    /**\n     * Process the click event.\n     *\n     * With template components, delegating the events as much as possible is\n     * the best approach. Otherwise a template refresh can remove the event listeners.\n     *\n     * @param {Event} event\n     */\n    processClick(event) {\n        const clickedElement = event.target.closest('[data-mdl-nosferatu-action]');\n        const victim = this.getReference('victim');\n        if (!clickedElement || !victim) {\n            return;\n        }\n        if (clickedElement.getAttribute('data-mdl-nosferatu-action') === 'bite') {\n            event.preventDefault();\n            this.reactive.dispatch('bite', victim.value);\n        }\n    }\n}\n"],"names":["TemplateComponent","create","name","allowTemplateInjection","stateReady","addEventListener","this","element","processClick","event","clickedElement","target","closest","victim","getReference","getAttribute","preventDefault","reactive","dispatch","value"],"mappings":";;;;;;;;uBAwB6BA,4BAKzBC,cAESC,KAAO,wBAShBC,gCACW,EAUXC,kBACSC,iBAAiBC,KAAKC,QAAS,QAASD,KAAKE,cAWtDA,aAAaC,aACHC,eAAiBD,MAAME,OAAOC,QAAQ,+BACtCC,OAASP,KAAKQ,aAAa,UAC5BJ,gBAAmBG,QAGyC,SAA7DH,eAAeK,aAAa,+BAC5BN,MAAMO,sBACDC,SAASC,SAAS,OAAQL,OAAOM"}